{"version":3,"sources":["components/Home.js","components/Question.js","components/Score.js","App.js","reportWebVitals.js","index.js"],"names":["Home","handleBegin","this","props","Container","className","Button","variant","onClick","React","Component","Question","question","handleAnswer","questionNumber","md","category","Card","Body","Text","he","decode","Footer","Score","score","questions","handlePlayAgain","Row","Col","ListGroup","as","map","index","correct_answer","playerAnswer","Item","eventKey","size","style","color","apiUrl","App","state","screen","fetch","then","response","json","data","setState","results","answer","Navbar","bg","Brand","href","renderLoading","renderHome","renderQuestion","renderScore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cb8ccd6.chunk.js","sourcesContent":["import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nclass Home extends React.Component {\n\n  render() {\n    const handleBegin = this.props.handleBegin;\n    return (\n      <Container className=\"content\">\n        <h1>Welcome to the Trivia Challenge!</h1>\n        <p>You will be present with 10 True of False questions.</p>\n        <p>Can you score 100%</p>\n        <Button\n          variant=\"primary\"\n          onClick={() => handleBegin()}\n        >Begin</Button>\n      </Container>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport he from 'he'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nclass Question extends React.Component {\n  render() {\n    const question = this.props.question;\n    const handleAnswer = this.props.handleAnswer;\n    const questionNumber = this.props.questionNumber;\n    return (\n      <Container className=\"content\">\n        <Row md={12}>\n          <h3>{question.category}</h3>\n          <Card>\n            <Card.Body>\n              <Card.Text>\n                {he.decode(question.question)}\n              </Card.Text>\n              <Button\n                className=\"answer-option\"\n                variant=\"success\"\n                onClick={() => handleAnswer(\"True\")}\n              >True</Button>\n              <Button\n                className=\"answer-option\"\n                variant=\"danger\"\n                onClick={() => handleAnswer(\"False\")}\n              >False</Button>\n            </Card.Body>\n            <Card.Footer className=\"text-muted\">{questionNumber} of 10</Card.Footer>\n          </Card>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Question;","import React from 'react';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport he from 'he'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\n\nclass Score extends React.Component {\n\n  render() {\n    const score = this.props.score;\n    const questions = this.props.questions;\n    const handlePlayAgain = this.props.handlePlayAgain;\n    return (\n      <Container className=\"content\">\n        <Row>\n          <Col md={12}>\n            <h2>You scored<br/>{score} / 10</h2>\n          </Col>\n        </Row>\n        <ListGroup as=\"ul\" variant=\"flush\" className=\"questions-list\">\n          {\n            questions.map((question, index) => {\n              if (question.correct_answer === question.playerAnswer) {\n                return (\n                  <ListGroup.Item key={index} as=\"li\" eventKey={index} className=\"item-list\">\n                    <div className=\"icon-list\">\n                      <FaCheck className=\"icon-list\" size={30} style={{color: \"green\"}} />\n                    </div>\n                    <div>\n                      {he.decode(question.question)}\n                    </div>\n                  </ListGroup.Item>\n                );\n              } else {\n                return (\n                  <ListGroup.Item className=\"item-list\">\n                    <div className=\"icon-list\">\n                      <FaTimes className=\"icon-list\" size={30} style={{color: \"red\"}} />\n                    </div>\n                    <div>\n                      {he.decode(question.question)}\n                    </div>\n                  </ListGroup.Item>\n                );\n              }\n            })\n          }\n        </ListGroup>\n        <Button\n          variant=\"primary\"\n          onClick={() => handlePlayAgain()}\n        >Play Again?</Button>\n      </Container>\n    );\n  }\n}\n\nexport default Score;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\n\nimport Home from './components/Home';\nimport Question from './components/Question';\nimport Score from './components/Score';\n\nconst apiUrl = \"https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      screen: \"loading\",\n      questionNumber: -1\n    };\n    this.score = 0;\n  }\n\n  componentDidMount() {\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState((state, props) => ({\n          screen: \"home\"\n        }));\n        this.questions = data.results;\n      });\n  }\n\n  handleBegin() {\n    this.setState((state, props) => ({\n      questionNumber: state.questionNumber + 1,\n      screen: \"question\"\n    }));\n  }\n\n  handleAnswer(answer) {\n    const questionNumber = this.state.questionNumber;\n    this.questions[questionNumber].playerAnswer = answer;\n    if (this.questions[questionNumber].correct_answer === answer) {\n      this.score++;\n    }\n    if (questionNumber + 1 === 10) {\n      this.setState((state, props) => ({\n        screen: \"score\"\n      }));\n    } else {\n      this.setState((state, props) => ({\n        questionNumber: questionNumber + 1\n      }));\n    }\n  }\n\n  handlePlayAgain() {\n    this.setState((state, props) => ({\n      screen: \"loading\"\n    }));\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState((state, props) => ({\n          screen: \"home\",\n          questionNumber: -1\n        }));\n        this.score = 0;\n        this.questions = data.results;\n      });\n  }\n\n  renderLoading() {\n    return (\n      <Container className=\"content\">\n        <p>Loading...</p>\n      </Container>\n    );\n  }\n\n  renderHome() {\n    return (\n      <Home handleBegin={() => this.handleBegin()}/>\n    );\n  }\n\n  renderQuestion() {\n    const questionNumber = this.state.questionNumber;\n    const question = this.questions[questionNumber];\n    return (\n      <Question\n        question={question}\n        handleAnswer={(answer) => this.handleAnswer(answer)}\n        questionNumber={questionNumber + 1} />\n    );\n  }\n\n  renderScore() {\n    const questions = this.questions;\n    const score = this.score;\n    return (\n      <Score\n        questions={questions}\n        score={score}\n        handlePlayAgain={() => this.handlePlayAgain()} />\n    );\n  }\n\n  render() {\n    const screen = this.state.screen;\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"\\\">QuizApp</Navbar.Brand>\n        </Navbar>\n        {\n          (() => {\n            if (screen === \"loading\") {\n              return this.renderLoading();\n            } else if (screen === \"home\") {\n              return this.renderHome();\n            } else if (screen === \"question\") {\n              return this.renderQuestion();\n            } else if (screen === \"score\") {\n              return this.renderScore();\n            }\n          })()\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}